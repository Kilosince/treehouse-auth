{"ast":null,"code":"var _jsxFileName = \"C:\\\\react-auth\\\\client\\\\src\\\\context\\\\UserContext.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext(null);\nexport const UserProvider = props => {\n  _s();\n  const [authUser, setAuthUser] = useState(null);\n  const signIn = async credentials => {\n    const encodedCreditials = btoa(`${creditials.username}:${creditials.password}`);\n    const fetchOptions = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Basic ${encodedCreditials}`\n      }\n    };\n    const response = await fetch(\"http://localhost:5000/api/users\", fetchOptions);\n    if (response.status === 200) {\n      const user = await response.json();\n      setAuthUser(user);\n      return user;\n    } else if (response.status === 401) {\n      return null;\n    } else {\n      throw new Error();\n    }\n  };\n  const signOut = () => {};\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      authUser,\n      actions: {\n        signIn\n      }\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"TVTL2WymH8LPiPX8vka/W2C28u0=\");\n_c = UserProvider;\nexport default UserContext;\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","UserContext","UserProvider","props","_s","authUser","setAuthUser","signIn","credentials","encodedCreditials","btoa","creditials","username","password","fetchOptions","method","headers","Authorization","response","fetch","status","user","json","Error","signOut","Provider","value","actions","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/react-auth/client/src/context/UserContext.js"],"sourcesContent":["import { createContext, useState } from \"react\";\n\nconst UserContext = createContext(null);\n\nexport const UserProvider = (props) => {\n  const [authUser, setAuthUser] = useState(null);\n  \n  const signIn = async (credentials) => {\n    const encodedCreditials = btoa(`${creditials.username}:${creditials.password}`);\n    const fetchOptions = {\n      method: \"GET\",\n      headers: {\n        Authorization: `Basic ${encodedCreditials}`\n      }\n    };\n\n    const response = await fetch(\"http://localhost:5000/api/users\", fetchOptions);\n    if (response.status === 200){\n     const user = await response.json();\n     setAuthUser(user);\n     return user\n       } else if (response.status === 401) {\n     return null\n   } else {\n     throw new Error();\n   } \n  }\n\n  const signOut = () => {\n\n  }\n\n  return (\n    <UserContext.Provider value={{\n      authUser,\n      actions: {\n        signIn\n      }\n    }}>\n      {props.children}\n    </UserContext.Provider>\n  );\n}\n\nexport default UserContext;"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,WAAW,gBAAGJ,aAAa,CAAC,IAAI,CAAC;AAEvC,OAAO,MAAMK,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMS,MAAM,GAAG,MAAOC,WAAW,IAAK;IACpC,MAAMC,iBAAiB,GAAGC,IAAI,CAAE,GAAEC,UAAU,CAACC,QAAS,IAAGD,UAAU,CAACE,QAAS,EAAC,CAAC;IAC/E,MAAMC,YAAY,GAAG;MACnBC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACPC,aAAa,EAAG,SAAQR,iBAAkB;MAC5C;IACF,CAAC;IAED,MAAMS,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAEL,YAAY,CAAC;IAC7E,IAAII,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAC;MAC3B,MAAMC,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;MAClChB,WAAW,CAACe,IAAI,CAAC;MACjB,OAAOA,IAAI;IACT,CAAC,MAAM,IAAIH,QAAQ,CAACE,MAAM,KAAK,GAAG,EAAE;MACtC,OAAO,IAAI;IACb,CAAC,MAAM;MACL,MAAM,IAAIG,KAAK,CAAC,CAAC;IACnB;EACD,CAAC;EAED,MAAMC,OAAO,GAAGA,CAAA,KAAM,CAEtB,CAAC;EAED,oBACExB,OAAA,CAACC,WAAW,CAACwB,QAAQ;IAACC,KAAK,EAAE;MAC3BrB,QAAQ;MACRsB,OAAO,EAAE;QACPpB;MACF;IACF,CAAE;IAAAqB,QAAA,EACCzB,KAAK,CAACyB;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAAA5B,EAAA,CAtCYF,YAAY;AAAA+B,EAAA,GAAZ/B,YAAY;AAwCzB,eAAeD,WAAW;AAAC,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}